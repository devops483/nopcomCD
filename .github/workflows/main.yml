name: nopCommerce CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    env:
      COMPOSE_PROJECT_NAME: nopcommerce
      DB_CONTAINER: nopcommerce_mssql_server
      DB_NAME: nopcommerce2
      DB_PASSWORD: yourStrong()Password

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Backup Database
        run: |
          echo "üíæ Backing up database '${DB_NAME}'..."
          BACKUP_DIR=/var/opt/mssql/backup
          TIMESTAMP=$(date +%F_%H-%M-%S)
          BACKUP_FILE="${BACKUP_DIR}/${DB_NAME}_${TIMESTAMP}.bak"

          echo "üì§ Running SQL Server backup using sqlcmd from a utility container..."
          docker run --rm --network container:${DB_CONTAINER} mcr.microsoft.com/mssql-tools \
            /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${DB_PASSWORD}" \
            -Q "BACKUP DATABASE [${DB_NAME}] TO DISK='${BACKUP_FILE}'"

          echo "üì• Copying backup file from container to workspace..."
          mkdir -p backup
          CONTAINER_BAK=$(docker exec ${DB_CONTAINER} find ${BACKUP_DIR} -type f -name "${DB_NAME}_*.bak" | tail -n1)

          if [ -z "$CONTAINER_BAK" ]; then
              echo "‚ùå No backup file found in container!"
              exit 1
          fi

          echo "‚úÖ Found backup file: $CONTAINER_BAK"
          docker cp ${DB_CONTAINER}:"$CONTAINER_BAK" ./backup/

      - name: Stop Existing Containers
        run: |
          echo "üõë Stopping and removing existing containers..."
          docker-compose down || true
          docker rm -f nopcommerce_mssql_server || true
          docker rm -f nopcommerce_web || true

      - name: Start All Containers
        run: |
          echo "üöÄ Starting containers..."
          docker-compose up -d
          echo "‚è±Ô∏è Waiting for services to be ready..."
          sleep 30

      - name: Smoke Tests
        run: |
          echo "üîç Running smoke tests..."
          set -e
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:9000)
          [ "$HTTP_CODE" = "200" ]

          curl -sSf http://localhost:9000 | grep -qi "nopCommerce"
          curl -sSf http://localhost:9000/login | grep -qi "Email"
          docker ps | grep -q nopcommerce_mssql_server
          echo "‚úÖ Smoke tests passed!"
